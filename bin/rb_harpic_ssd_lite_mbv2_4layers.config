# SSD with Mobilenet v2 configuration for MSCOCO Dataset.
# Users should configure the fine_tune_checkpoint field in the train config as
# well as the label_map_path and input_path fields in the train_input_reader and
# eval_input_reader. Search for "PATH_TO_BE_CONFIGURED" to find the fields that
# should be configured.

model {
  ssd {
    num_classes: 37 
    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 5.0
        width_scale: 5.0
      }
    }
    matcher {
      argmax_matcher {
        matched_threshold: 0.50
        unmatched_threshold: 0.35
        ignore_thresholds: false
        negatives_lower_than_unmatched: true
        force_match_for_each_row: true
        #force_match_for_each_row: true
        #force_match_for_each_row: false
      }
    }
    similarity_calculator {
      iou_similarity {
      }
    }
    anchor_generator {
      ssd_anchor_generator {
        #min_scale: 0.05
        #max_scale: 0.7
        reduce_boxes_in_lowest_layer: false

        #num_layers: 6
        #scales:0.05
        #scales:0.1
        #scales:0.25
        #scales:0.4
        #scales:0.55
        #scales:0.7
        #
        #scales:0.047
        #scales:0.094
        #scales:0.1875
        #scales:0.375
        #scales:0.5625
        #scales:0.75
        #
        #scales:0.047
        #scales:0.094
        #scales:0.2625
        #scales:0.425
        #scales:0.5875
        #scales:0.75

        num_layers: 4
        ## 1/38=0.025
        ## 3/38=0.08
        scales:0.025
        scales:0.08
        scales:0.16
        scales:0.32
        #num_layers: 8
	    #scales:0.04  #1/38 ~ 3/38 = 0.025
	    #scales:0.05  #1/38 ~ 3/38 = 0.025
	    #scales:0.075 #1/19 ~ 3/19 = 0.05
	    #scales:0.10  #1/19 ~ 3/19 = 0.05
	    #scales:0.20  #1/10 ~ 3/10 = 0.10
	    #scales:0.375  #1/5   =0.2
	    #scales:0.5   #1/3   =0.33
	    #scales:0.65  #2/2   =1

        #scales:0.037  #1/44 ~ 3/43 = 0.022
	    #scales:0.05  #1/44 ~ 3/38 = 0.025
	    #scales:0.075 #1/22 ~ 3/19 = 0.04
	    #scales:0.10  #1/22 ~ 3/19 = 0.05
	    #scales:0.20  #1/11 ~ 3/10 = 0.10
	    #scales:0.375 #1/6   =0.1666
	    #scales:0.5   #1/3   =0.33
	    #scales:0.65  #2/2   =1

        #interpolated_scale_aspect_ratio:1.333333
        # width:height
        #aspect_ratios: 1.3333333   #1/8 : 1/6
        #aspect_ratios: 1.6
        #aspect_ratios: 1.8666667

        #aspect_ratios: 1.0
        #aspect_ratios: 1.2
        #aspect_ratios: 1.4
		#aspect_ratios: [2.120835887687927, 0.8871532697743034, 0.5136440002002249]
		aspect_ratios: 2.120835887687927 
        aspect_ratios: 0.8871532697743034
        aspect_ratios: 0.5136440002002249
        #aspect_ratios: 1.0
        #aspect_ratios: 1.5
        #aspect_ratios: 0.6
        #aspect_ratios: 0.4
        #aspect_ratios: 0.2
      }
    }
    image_resizer {
      fixed_shape_resizer {
        #height:682
        #width: 512  
        height:800
        width: 600
        #the 6 feature layers: 
        #64,  3/38 = 0.05             
        #32,  3/19 = 0.1 
        #16,  3/10 = 0.2      
        #8,   3/8  = 0.375
        #4,   3/4  = 
        #2,        = 0.7 
      }
    }
    box_predictor {
      convolutional_box_predictor {
        min_depth: 0
        max_depth: 0
        num_layers_before_predictor: 0
        use_dropout: true
        dropout_keep_probability: 0.8
        #kernel_size: 1
        kernel_size: 3
        use_depthwise: true
        box_code_size: 4
        apply_sigmoid_to_scores: false
        conv_hyperparams {
          activation: RELU_6,
          regularizer {
            l2_regularizer {
              weight: 0.00004
            }
          }
          initializer {
            truncated_normal_initializer {
              stddev: 0.03
              mean: 0.0
            }
          }
          batch_norm {
            train: true,
            scale: true,
            center: true,
            decay: 0.9997,
            epsilon: 0.001,
          }
        }
      }
    }
    feature_extractor {
      type: 'ssd_mobilenet_v2'
      min_depth: 16
      depth_multiplier: 1.0
      conv_hyperparams {
        activation: RELU_6,
        regularizer {
          l2_regularizer {
            weight: 0.00004
          }
        }
        initializer {
          truncated_normal_initializer {
            stddev: 0.03
            mean: 0.0
          }
        }
        batch_norm {
          train: true,
          scale: true,
          center: true,
          decay: 0.9997,
          epsilon: 0.001,
        }
      }
    }
    loss {
      classification_loss {
        #weighted_sigmoid{
        #weighted_softmax{
        #}
        weighted_sigmoid_focal {
          alpha: 0.75
          gamma: 2.0
        }
      }

      localization_loss {
        weighted_smooth_l1 {
        }
      }

      #hard_example_miner {
      #  num_hard_examples: 3000
      #  #num_hard_examples: 12000
      #  iou_threshold: 0.99
      #  loss_type: CLASSIFICATION
      #  max_negatives_per_positive: 3
      #  min_negatives_per_image: 3
      #}
      classification_weight: 1.5
      localization_weight: 1.0
    }
    normalize_loss_by_num_matches: true
    #normalize_loc_loss_by_codesize: true
    post_processing {
      batch_non_max_suppression {
        score_threshold: 1e-1
        iou_threshold: 0.4
        max_detections_per_class: 150
        max_total_detections: 180
      }
      score_converter: SIGMOID
      #score_converter: SOFTMAX
    }
  }
}

train_config: {
  #batch_size: 24 
  batch_size: 8
  optimizer {
    rms_prop_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate {
          initial_learning_rate: 0.004
          #initial_learning_rate: 0.0004
          #initial_learning_rate: 0.0008
          #initial_learning_rate: 0.0001
          #initial_learning_rate: 0.012
          #decay_steps: 800720
          decay_steps: 30000
          decay_factor: 0.95
        }
      }
      momentum_optimizer_value: 0.9
      decay: 0.9
      epsilon: 1.0
    }
   # adam_optimizer: {
   # 	learning_rate: {
   # 	  constant_learning_rate {
   # 		learning_rate: 0.001
   # 	  }
   # 	}
   #}
   #use_moving_average: false

    #momentum_optimizer: {
    #  learning_rate: {
    #    cosine_decay_learning_rate {
    #      learning_rate_base: 0.9
    #      total_steps: 200000
    #      warmup_learning_rate: 0.3
    #      warmup_steps: 1000
    #    }
    #  }
    #  momentum_optimizer_value: 0.9
    #}
    #use_moving_average: false 
  }
  fine_tune_checkpoint: "../ckpt/model.ckpt-100000"
  fine_tune_checkpoint_type:  "detection"
  #fine_tune_checkpoint_type:  "classification"
  # Note: The below line limits the training process to 200K steps, which we
  # empirically found to be sufficient enough to train the pets dataset. This
  # effectively bypasses the learning rate schedule (the learning rate will
  # never decay). Remove the below line to train indefinitely.
  num_steps: 120000
  
   data_augmentation_options {
	 random_black_patches{
	     size_to_image_ratio:0.015
	 }
   }

  data_augmentation_options {
     random_adjust_saturation {
       min_delta: 0.95
       max_delta: 1.05
    }
   }

   data_augmentation_options {
	 random_adjust_brightness {
	   max_delta:0.08
	 }
   }

  data_augmentation_options {
	 random_adjust_contrast {
	   min_delta: 0.9
	   max_delta: 1.1
	 }
   }

   ##data_augmentation_options {
   ##  random_adjust_hue {
   ##  }
   ##}


  data_augmentation_options {
	 #ssd_random_crop {
	 #ssd_random_crop_pad_fixed_aspect_ratio{
	 #}
	 random_crop_pad_image {
		 min_object_covered: 0.0
		 min_aspect_ratio: 0.70
		 max_aspect_ratio: 0.80
		 min_area:0.75
		 max_area:1.0
		 overlap_thresh:0.80
		 min_padded_size_ratio:1.0
		 min_padded_size_ratio:1.0
		 max_padded_size_ratio:2
		 max_padded_size_ratio:2
	 }
   }
  

  max_number_of_boxes: 200
  merge_multiple_label_boxes:true
  unpad_groundtruth_tensors: false
}

train_input_reader: {
  tf_record_input_reader {
    #input_path: "/home/keyong/Documents/ssd/dataset/train_tfrecord/data/train.record"
    input_path: "/mnt/500GB_SSD/keyong_ssd/rb_harpic_tfrecord/data/train.record"
  }
  #label_map_path: "/home/keyogn/Documents/ssd/dataset/train_tfrecord/data/label_map.pbtxt"
  label_map_path: "/mnt/500GB_SSD/keyong_ssd/rb_harpic_tfrecord/data/label_map.pbtxt"
}

eval_config: {
  num_examples: 100
  # Note: The below line limits the evaluation process to 10 evaluations.
  # Remove the below line to evaluate indefinitely.
  # max_evals: 10
  #default is 120
  eval_interval_secs:30
  #default is 10
  num_visualizations:40
  visualize_groundtruth_boxes:true
  max_num_boxes_to_visualize: 200
  
}

eval_input_reader: {
  tf_record_input_reader {
    input_path: "/mnt/500GB_SSD/keyong_ssd/rb_harpic_tfrecord/data/train.record"
  }
  label_map_path: "/mnt/500GB_SSD/keyong_ssd/rb_harpic_tfrecord/data/label_map.pbtxt"
  shuffle: false
  num_readers: 1
  #num_epochs: 1
}
